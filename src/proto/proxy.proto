syntax = "proto3";

package proxy;

// Main proxy service definition
service ProxyService {
  // Stream-based proxy traffic handling
  rpc ProxyTraffic(stream ProxyRequest) returns (stream ProxyResponse);
  
  // Configuration and management methods
  rpc ConfigureProxy(ProxyConfig) returns (StatusResponse);
  rpc GetStatus(StatusRequest) returns (StatusResponse);
  rpc EstablishTunnel(TunnelRequest) returns (stream TunnelResponse);
}

// Request message for proxy traffic
message ProxyRequest {
  string request_id = 1;
  string destination_url = 2;
  string method = 3;
  map<string, string> headers = 4;
  bytes payload = 5;
  bool is_encrypted = 6;
}

// Response message for proxy traffic
message ProxyResponse {
  string request_id = 1;
  int32 status_code = 2;
  map<string, string> headers = 3;
  bytes payload = 4;
  bool is_encrypted = 5;
  string error_message = 6;
}

// Configuration message
message ProxyConfig {
  bool enable_encryption = 1;
  int32 connection_timeout_ms = 2;
  repeated string bypass_domains = 3;
  string dns_resolver = 4;
  int32 max_connections = 5;
  map<string, string> custom_headers = 6;
  string proxy_mode = 7; // "direct", "system", "manual", "pac"
}

// Status request message
message StatusRequest {
  bool include_active_connections = 1;
  bool include_stats = 2;
}

// Status response message
message StatusResponse {
  bool is_running = 1;
  int32 active_connections = 2;
  int64 bytes_transferred_in = 3;
  int64 bytes_transferred_out = 4;
  string version = 5;
  string error_message = 6;
  repeated ConnectionStats active_connection_stats = 7;
}

// Connection statistics
message ConnectionStats {
  string connection_id = 1;
  string destination = 2;
  int64 bytes_in = 3;
  int64 bytes_out = 4;
  int64 duration_ms = 5;
}

// Tunnel request
message TunnelRequest {
  string target_host = 1;
  int32 target_port = 2;
  string tunnel_type = 3; // "http", "socks5", "ssh"
  map<string, string> auth_params = 4;
}

// Tunnel response
message TunnelResponse {
  string tunnel_id = 1;
  string status = 2;
  bytes tunnel_data = 3;
  string error_message = 4;
}
